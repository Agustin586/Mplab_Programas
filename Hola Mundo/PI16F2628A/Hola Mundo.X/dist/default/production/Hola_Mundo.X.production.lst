

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Dec 27 02:30:11 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 2.20
    12                           ; Generated 09/04/2020 GMT
    13                           ; 
    14                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F628A Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  000A                     	;# 
    53  000B                     	;# 
    54  000C                     	;# 
    55  000E                     	;# 
    56  000E                     	;# 
    57  000F                     	;# 
    58  0010                     	;# 
    59  0011                     	;# 
    60  0012                     	;# 
    61  0015                     	;# 
    62  0015                     	;# 
    63  0016                     	;# 
    64  0017                     	;# 
    65  0018                     	;# 
    66  0019                     	;# 
    67  001A                     	;# 
    68  001F                     	;# 
    69  0081                     	;# 
    70  0085                     	;# 
    71  0086                     	;# 
    72  008C                     	;# 
    73  008E                     	;# 
    74  0092                     	;# 
    75  0098                     	;# 
    76  0099                     	;# 
    77  009A                     	;# 
    78  009B                     	;# 
    79  009C                     	;# 
    80  009D                     	;# 
    81  009F                     	;# 
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  008C                     	;# 
   110  008E                     	;# 
   111  0092                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009F                     	;# 
   119  0006                     _PORTBbits	set	6
   120  0005                     _PORTAbits	set	5
   121  0006                     _PORTB	set	6
   122  001F                     _CMCON	set	31
   123  0085                     _TRISAbits	set	133
   124  0086                     _TRISB	set	134
   125                           
   126                           	psect	cinit
   127  07FE                     start_initialization:	
   128                           ; #config settings
   129                           
   130  07FE                     __initialization:
   131  07FE                     end_of_initialization:	
   132                           ;End of C runtime variable initialization code
   133                           
   134  07FE                     __end_of__initialization:
   135  07FE  0183               	clrf	3
   136  07FF  2FB5               	ljmp	_main	;jump to C main() function
   137                           
   138                           	psect	cstackCOMMON
   139  0070                     __pcstackCOMMON:
   140  0070                     ?_Antirrebote:
   141  0070                     ??_Antirrebote:	
   142                           ; 1 bytes @ 0x0
   143                           
   144  0070                     ?_main:	
   145                           ; 1 bytes @ 0x0
   146                           
   147                           
   148                           ; 1 bytes @ 0x0
   149  0070                     	ds	2
   150  0072                     ??_main:
   151                           
   152                           ; 1 bytes @ 0x2
   153  0072                     	ds	3
   154  0075                     main@i:
   155                           
   156                           ; 1 bytes @ 0x5
   157  0075                     	ds	1
   158                           
   159                           	psect	maintext
   160  07B5                     __pmaintext:	
   161 ;;
   162 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   163 ;;
   164 ;; *************** function _main *****************
   165 ;; Defined at:
   166 ;;		line 10 in file "Main.c"
   167 ;; Parameters:    Size  Location     Type
   168 ;;		None
   169 ;; Auto vars:     Size  Location     Type
   170 ;;  i               1    5[COMMON] unsigned char 
   171 ;; Return value:  Size  Location     Type
   172 ;;                  1    wreg      void 
   173 ;; Registers used:
   174 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   175 ;; Tracked objects:
   176 ;;		On entry : B00/0
   177 ;;		On exit  : 0/0
   178 ;;		Unchanged: 0/0
   179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   180 ;;      Params:         0       0       0       0
   181 ;;      Locals:         1       0       0       0
   182 ;;      Temps:          3       0       0       0
   183 ;;      Totals:         4       0       0       0
   184 ;;Total ram usage:        4 bytes
   185 ;; Hardware stack levels required when called:    1
   186 ;; This function calls:
   187 ;;		_Antirrebote
   188 ;; This function is called by:
   189 ;;		Startup code after reset
   190 ;; This function uses a non-reentrant model
   191 ;;
   192                           
   193                           
   194                           ;psect for function _main
   195  07B5                     _main:
   196  07B5                     l631:	
   197                           ;incstack = 0
   198                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   199                           
   200                           
   201                           ;Main.c: 13:     CMCON = 0x07;
   202  07B5  3007               	movlw	7
   203  07B6  1283               	bcf	3,5	;RP0=0, select bank0
   204  07B7  1303               	bcf	3,6	;RP1=0, select bank0
   205  07B8  009F               	movwf	31	;volatile
   206  07B9                     l633:
   207                           
   208                           ;Main.c: 16:     TRISB = 0;
   209  07B9  1683               	bsf	3,5	;RP0=1, select bank1
   210  07BA  1303               	bcf	3,6	;RP1=0, select bank1
   211  07BB  0186               	clrf	6	;volatile
   212  07BC                     l635:
   213                           
   214                           ;Main.c: 17:     PORTB = 0;
   215  07BC  1283               	bcf	3,5	;RP0=0, select bank0
   216  07BD  1303               	bcf	3,6	;RP1=0, select bank0
   217  07BE  0186               	clrf	6	;volatile
   218  07BF                     l637:
   219                           
   220                           ;Main.c: 20:     TRISAbits.TRISA0 = 1;
   221  07BF  1683               	bsf	3,5	;RP0=1, select bank1
   222  07C0  1303               	bcf	3,6	;RP1=0, select bank1
   223  07C1  1405               	bsf	5,0	;volatile
   224  07C2                     l639:
   225                           
   226                           ;Main.c: 48:     {;Main.c: 49:         if(PORTAbits.RA0==1)
   227  07C2  1283               	bcf	3,5	;RP0=0, select bank0
   228  07C3  1C05               	btfss	5,0	;volatile
   229  07C4  2FC6               	goto	u21
   230  07C5  2FC7               	goto	u20
   231  07C6                     u21:
   232  07C6  2FC2               	goto	l639
   233  07C7                     u20:
   234  07C7                     l641:
   235                           
   236                           ;Main.c: 50:         {;Main.c: 51:             Antirrebote();
   237  07C7  27A6               	fcall	_Antirrebote
   238  07C8                     l643:
   239                           
   240                           ;Main.c: 52:             PORTBbits.RB0 = 1;
   241  07C8  1283               	bcf	3,5	;RP0=0, select bank0
   242  07C9  1303               	bcf	3,6	;RP1=0, select bank0
   243  07CA  1406               	bsf	6,0	;volatile
   244  07CB                     l645:
   245                           
   246                           ;Main.c: 53:             for(char i=1;i<8;i++)
   247  07CB  01F5               	clrf	main@i
   248  07CC  0AF5               	incf	main@i,f
   249  07CD                     l651:
   250                           
   251                           ;Main.c: 54:             {;Main.c: 55:                 _delay((unsigned long)((200)*(400
      +                          0000/4000.0)));
   252  07CD  3002               	movlw	2
   253  07CE  00F4               	movwf	??_main+2
   254  07CF  3004               	movlw	4
   255  07D0  00F3               	movwf	??_main+1
   256  07D1  30BA               	movlw	186
   257  07D2  00F2               	movwf	??_main
   258  07D3                     u47:
   259  07D3  0BF2               	decfsz	??_main,f
   260  07D4  2FD3               	goto	u47
   261  07D5  0BF3               	decfsz	??_main+1,f
   262  07D6  2FD3               	goto	u47
   263  07D7  0BF4               	decfsz	??_main+2,f
   264  07D8  2FD3               	goto	u47
   265  07D9  0000               	nop
   266  07DA                     l653:
   267                           
   268                           ;Main.c: 56:                 PORTB |= PORTB << 1;
   269  07DA  1283               	bcf	3,5	;RP0=0, select bank0
   270  07DB  1303               	bcf	3,6	;RP1=0, select bank0
   271  07DC  0806               	movf	6,w	;volatile
   272  07DD  00F2               	movwf	??_main
   273  07DE  0772               	addwf	??_main,w
   274  07DF  00FF               	movwf	btemp+1
   275  07E0  087F               	movf	btemp+1,w
   276  07E1  0486               	iorwf	6,f	;volatile
   277  07E2                     l655:
   278                           
   279                           ;Main.c: 57:             }
   280  07E2  3001               	movlw	1
   281  07E3  00FF               	movwf	btemp+1
   282  07E4  087F               	movf	btemp+1,w
   283  07E5  07F5               	addwf	main@i,f
   284  07E6  3008               	movlw	8
   285  07E7  0275               	subwf	main@i,w
   286  07E8  1C03               	skipc
   287  07E9  2FEB               	goto	u31
   288  07EA  2FEC               	goto	u30
   289  07EB                     u31:
   290  07EB  2FCD               	goto	l651
   291  07EC                     u30:
   292  07EC                     l657:
   293                           
   294                           ;Main.c: 67:             _delay((unsigned long)((200)*(4000000/4000.0)));
   295  07EC  3002               	movlw	2
   296  07ED  00F4               	movwf	??_main+2
   297  07EE  3004               	movlw	4
   298  07EF  00F3               	movwf	??_main+1
   299  07F0  30BA               	movlw	186
   300  07F1  00F2               	movwf	??_main
   301  07F2                     u57:
   302  07F2  0BF2               	decfsz	??_main,f
   303  07F3  2FF2               	goto	u57
   304  07F4  0BF3               	decfsz	??_main+1,f
   305  07F5  2FF2               	goto	u57
   306  07F6  0BF4               	decfsz	??_main+2,f
   307  07F7  2FF2               	goto	u57
   308  07F8  0000               	nop
   309  07F9                     l659:
   310                           
   311                           ;Main.c: 68:             PORTB = 0;
   312  07F9  1283               	bcf	3,5	;RP0=0, select bank0
   313  07FA  1303               	bcf	3,6	;RP1=0, select bank0
   314  07FB  0186               	clrf	6	;volatile
   315  07FC  2FC2               	goto	l639
   316  07FD  2800               	ljmp	start
   317  07FE                     __end_of_main:
   318                           
   319                           	psect	text1
   320  07A6                     __ptext1:	
   321 ;; *************** function _Antirrebote *****************
   322 ;; Defined at:
   323 ;;		line 75 in file "Main.c"
   324 ;; Parameters:    Size  Location     Type
   325 ;;		None
   326 ;; Auto vars:     Size  Location     Type
   327 ;;		None
   328 ;; Return value:  Size  Location     Type
   329 ;;                  1    wreg      void 
   330 ;; Registers used:
   331 ;;		wreg
   332 ;; Tracked objects:
   333 ;;		On entry : 0/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   337 ;;      Params:         0       0       0       0
   338 ;;      Locals:         0       0       0       0
   339 ;;      Temps:          2       0       0       0
   340 ;;      Totals:         2       0       0       0
   341 ;;Total ram usage:        2 bytes
   342 ;; Hardware stack levels used:    1
   343 ;; This function calls:
   344 ;;		Nothing
   345 ;; This function is called by:
   346 ;;		_main
   347 ;; This function uses a non-reentrant model
   348 ;;
   349                           
   350                           
   351                           ;psect for function _Antirrebote
   352  07A6                     _Antirrebote:
   353  07A6                     l625:	
   354                           ;incstack = 0
   355                           ; Regs used in _Antirrebote: [wreg]
   356                           
   357                           
   358                           ;Main.c: 77:     _delay((unsigned long)((30)*(4000000/4000.0)));
   359  07A6  3027               	movlw	39
   360  07A7  00F1               	movwf	??_Antirrebote+1
   361  07A8  30F5               	movlw	245
   362  07A9  00F0               	movwf	??_Antirrebote
   363  07AA                     u67:
   364  07AA  0BF0               	decfsz	??_Antirrebote,f
   365  07AB  2FAA               	goto	u67
   366  07AC  0BF1               	decfsz	??_Antirrebote+1,f
   367  07AD  2FAA               	goto	u67
   368  07AE                     l629:	
   369                           ;Main.c: 78:     while(PORTAbits.RA0==1) _delay((unsigned long)((30)*(4000000/4000.0)));
   370                           
   371  07AE  1283               	bcf	3,5	;RP0=0, select bank0
   372  07AF  1303               	bcf	3,6	;RP1=0, select bank0
   373  07B0  1805               	btfsc	5,0	;volatile
   374  07B1  2FB3               	goto	u11
   375  07B2  2FB4               	goto	u10
   376  07B3                     u11:
   377  07B3  2FA6               	goto	l625
   378  07B4                     u10:
   379  07B4                     l33:
   380  07B4  0008               	return
   381  07B5                     __end_of_Antirrebote:
   382  007E                     btemp	set	126	;btemp
   383  007E                     wtemp0	set	126
   384                           
   385                           	psect	config
   386                           
   387                           ;Config register CONFIG @ 0x2007
   388                           ;	Oscillator Selection bits
   389                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
   390                           ;	Watchdog Timer Enable bit
   391                           ;	WDTE = OFF, WDT disabled
   392                           ;	Power-up Timer Enable bit
   393                           ;	PWRTE = ON, PWRT enabled
   394                           ;	RA5/MCLR/VPP Pin Function Select bit
   395                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
   396                           ;	Brown-out Detect Enable bit
   397                           ;	BOREN = OFF, BOD disabled
   398                           ;	Low-Voltage Programming Enable bit
   399                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
   400                           ;	Data EE Memory Code Protection bit
   401                           ;	CPD = OFF, Data memory code protection off
   402                           ;	Flash Program Memory Code Protection bit
   403                           ;	CP = OFF, Code protection off
   404  2007                     	org	8199
   405  2007  3F30               	dw	16176

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Antirrebote

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      30
                                              2 COMMON     4     4      0
                        _Antirrebote
 ---------------------------------------------------------------------------------
 (1) _Antirrebote                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Antirrebote

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Dec 27 02:30:11 2020

                     l33 07B4                       u10 07B4                       u11 07B3  
                     u20 07C7                       u21 07C6                       u30 07EC  
                     u31 07EB                       u47 07D3                       u57 07F2  
                     u67 07AA                      l631 07B5                      l625 07A6  
                    l641 07C7                      l633 07B9                      l651 07CD  
                    l643 07C8                      l635 07BC                      l629 07AE  
                    l653 07DA                      l645 07CB                      l637 07BF  
                    l655 07E2                      l639 07C2                      l657 07EC  
                    l659 07F9                     _main 07B5                     btemp 007E  
                   start 0000      __end_of_Antirrebote 07B5                    ?_main 0070  
                  _CMCON 001F                    _PORTB 0006                    _TRISB 0086  
                  main@i 0075                    status 0003                    wtemp0 007E  
        __initialization 07FE             __end_of_main 07FE                   ??_main 0072  
            _Antirrebote 07A6  __end_of__initialization 07FE           __pcstackCOMMON 0070  
             __pmaintext 07B5                  __ptext1 07A6     end_of_initialization 07FE  
           ?_Antirrebote 0070                _PORTAbits 0005                _PORTBbits 0006  
              _TRISAbits 0085      start_initialization 07FE                ___latbits 0000  
   __size_of_Antirrebote 000F            __size_of_main 0049            ??_Antirrebote 0070  
